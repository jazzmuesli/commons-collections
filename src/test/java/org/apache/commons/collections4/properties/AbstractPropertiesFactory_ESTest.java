/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 05:41:16 GMT 2019
 */

package org.apache.commons.collections4.properties;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.URI;
import java.net.URL;
import java.nio.file.FileSystemNotFoundException;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.util.Properties;
import org.apache.commons.collections4.properties.PropertiesFactory;
import org.apache.commons.collections4.properties.SortedProperties;
import org.apache.commons.collections4.properties.SortedPropertiesFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AbstractPropertiesFactory_ESTest extends AbstractPropertiesFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      URL uRL0 = MockURL.getHttpExample();
      Properties properties0 = propertiesFactory0.load(uRL0);
      assertEquals(0, properties0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Z");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Properties properties0 = propertiesFactory0.load("Z");
      assertEquals(0, properties0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      StringReader stringReader0 = new StringReader("");
      Properties properties0 = propertiesFactory0.load((Reader) stringReader0);
      assertTrue(properties0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)70, 0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      Properties properties0 = propertiesFactory0.load((InputStream) bufferedInputStream0);
      assertTrue(properties0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      Properties properties0 = propertiesFactory0.load((InputStream) bufferedInputStream0);
      assertFalse(properties0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SortedPropertiesFactory sortedPropertiesFactory0 = SortedPropertiesFactory.INSTANCE;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.apache.commons.collections4.properties.SortedProperties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ",jY[");
      MockFile mockFile0 = new MockFile("org.apache.commons.collections4.properties.SortedProperties");
      SortedProperties sortedProperties0 = sortedPropertiesFactory0.load((File) mockFile0);
      assertFalse(sortedProperties0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      MockFile mockFile0 = new MockFile("", "f}G2'+j+pi\"hdJ");
      Path path0 = mockFile0.toPath();
      try { 
        propertiesFactory0.load(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      // Undeclared exception!
      try { 
        propertiesFactory0.load((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        propertiesFactory0.load(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      URL uRL0 = MockURL.getHttpExample();
      try { 
        propertiesFactory0.load(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      URI uRI0 = MockURI.aHttpURI;
      // Undeclared exception!
      try { 
        propertiesFactory0.load(uRI0);
        fail("Expecting exception: FileSystemNotFoundException");
      
      } catch(FileSystemNotFoundException e) {
         //
         // Provider \"http\" not installed
         //
         verifyException("java.nio.file.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      // Undeclared exception!
      try { 
        propertiesFactory0.load((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.file.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      URI uRI0 = MockURI.create("");
      // Undeclared exception!
      try { 
        propertiesFactory0.load(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Missing scheme
         //
         verifyException("java.nio.file.Paths", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PropertiesFactory propertiesFactory0 = PropertiesFactory.INSTANCE;
      // Undeclared exception!
      try { 
        propertiesFactory0.load((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
