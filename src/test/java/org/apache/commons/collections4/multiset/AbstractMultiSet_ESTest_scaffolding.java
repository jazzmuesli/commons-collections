/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 16 05:40:27 GMT 2019
 */

package org.apache.commons.collections4.multiset;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class AbstractMultiSet_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.multiset.AbstractMultiSet"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.OFF; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractMultiSet_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet",
      "org.apache.commons.collections4.Predicate",
      "org.apache.commons.collections4.functors.InstanceofPredicate",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator",
      "org.apache.commons.collections4.multiset.AbstractMultiSetDecorator",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet",
      "org.apache.commons.collections4.MultiSet$Entry",
      "org.apache.commons.collections4.functors.TransformerPredicate",
      "org.apache.commons.collections4.multiset.AbstractMultiSet$UniqueSet",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$UniqueSetIterator",
      "org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry",
      "org.apache.commons.collections4.FunctorException",
      "org.apache.commons.collections4.Unmodifiable",
      "org.apache.commons.collections4.iterators.AbstractIteratorDecorator",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger",
      "org.apache.commons.collections4.multiset.HashMultiSet",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MultiSetEntry",
      "org.apache.commons.collections4.Transformer",
      "org.apache.commons.collections4.collection.PredicatedCollection",
      "org.apache.commons.collections4.multiset.PredicatedMultiSet",
      "org.apache.commons.collections4.functors.ConstantTransformer",
      "org.apache.commons.collections4.multiset.UnmodifiableMultiSet",
      "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator",
      "org.apache.commons.collections4.multiset.AbstractMultiSet",
      "org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator",
      "org.apache.commons.collections4.MultiSet"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractMultiSet_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.collections4.multiset.AbstractMultiSet",
      "org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet",
      "org.apache.commons.collections4.multiset.AbstractMultiSet$MultiSetIterator",
      "org.apache.commons.collections4.multiset.AbstractMultiSet$UniqueSet",
      "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
      "org.apache.commons.collections4.iterators.EmptyIterator",
      "org.apache.commons.collections4.iterators.EmptyListIterator",
      "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
      "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
      "org.apache.commons.collections4.iterators.EmptyMapIterator",
      "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet",
      "org.apache.commons.collections4.multiset.HashMultiSet",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator",
      "org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator",
      "org.apache.commons.collections4.iterators.AbstractIteratorDecorator",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$UniqueSetIterator",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger",
      "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
      "org.apache.commons.collections4.multiset.AbstractMultiSetDecorator",
      "org.apache.commons.collections4.multiset.UnmodifiableMultiSet",
      "org.apache.commons.collections4.collection.SynchronizedCollection",
      "org.apache.commons.collections4.multiset.SynchronizedMultiSet",
      "org.apache.commons.collections4.functors.InstanceofPredicate",
      "org.apache.commons.collections4.collection.PredicatedCollection",
      "org.apache.commons.collections4.multiset.PredicatedMultiSet",
      "org.apache.commons.collections4.functors.AndPredicate",
      "org.apache.commons.collections4.functors.EqualPredicate",
      "org.apache.commons.collections4.functors.NotPredicate",
      "org.apache.commons.collections4.functors.PredicateTransformer",
      "org.apache.commons.collections4.functors.ConstantTransformer",
      "org.apache.commons.collections4.functors.TransformerPredicate",
      "org.apache.commons.collections4.functors.TruePredicate",
      "org.apache.commons.collections4.functors.AbstractQuantifierPredicate",
      "org.apache.commons.collections4.functors.NonePredicate",
      "org.apache.commons.collections4.functors.FunctorUtils",
      "org.apache.commons.collections4.functors.ComparatorPredicate",
      "org.apache.commons.collections4.functors.NullIsFalsePredicate",
      "org.apache.commons.collections4.iterators.UnmodifiableIterator",
      "org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry",
      "org.apache.commons.collections4.multiset.AbstractMapMultiSet$MultiSetEntry",
      "org.apache.commons.collections4.functors.AnyPredicate",
      "org.apache.commons.collections4.functors.NotNullPredicate",
      "org.apache.commons.collections4.functors.TransformedPredicate",
      "org.apache.commons.collections4.functors.OnePredicate",
      "org.apache.commons.collections4.functors.NullPredicate",
      "org.apache.commons.collections4.functors.FalsePredicate",
      "org.apache.commons.collections4.functors.ExceptionPredicate",
      "org.apache.commons.collections4.multiset.SynchronizedMultiSet$SynchronizedSet",
      "org.apache.commons.collections4.functors.AllPredicate",
      "org.apache.commons.collections4.functors.OrPredicate",
      "org.apache.commons.collections4.functors.DefaultEquator",
      "org.apache.commons.collections4.functors.NullIsTruePredicate",
      "org.apache.commons.collections4.functors.UniquePredicate",
      "org.apache.commons.collections4.functors.IdentityPredicate",
      "org.apache.commons.collections4.functors.SwitchTransformer",
      "org.apache.commons.collections4.functors.InvokerTransformer",
      "org.apache.commons.collections4.functors.ComparatorPredicate$1",
      "org.apache.commons.collections4.functors.NullIsExceptionPredicate",
      "org.apache.commons.collections4.functors.NOPTransformer",
      "org.apache.commons.collections4.functors.ExceptionFactory",
      "org.apache.commons.collections4.functors.FactoryTransformer",
      "org.apache.commons.collections4.FunctorException"
    );
  }
}
