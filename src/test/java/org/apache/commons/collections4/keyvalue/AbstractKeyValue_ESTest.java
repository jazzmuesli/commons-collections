/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:24:39 GMT 2019
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.apache.commons.collections4.KeyValue;
import org.apache.commons.collections4.keyvalue.DefaultKeyValue;
import org.apache.commons.collections4.keyvalue.DefaultMapEntry;
import org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AbstractKeyValue_ESTest extends AbstractKeyValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultKeyValue<String, Integer> defaultKeyValue0 = new DefaultKeyValue<String, Integer>();
      Integer integer0 = new Integer(9);
      Integer integer1 = defaultKeyValue0.setValue(integer0);
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultKeyValue<String, String> defaultKeyValue0 = new DefaultKeyValue<String, String>("?`Nc@wxD", "U");
      String string0 = defaultKeyValue0.setValue("");
      assertEquals("U", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultKeyValue<Object, Object> defaultKeyValue0 = new DefaultKeyValue<Object, Object>();
      Integer integer0 = new Integer(3314);
      Object object0 = defaultKeyValue0.setKey(integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(1229);
      DefaultMapEntry<Object, String> defaultMapEntry0 = new DefaultMapEntry<Object, String>(integer0, "j\".");
      Object object0 = defaultMapEntry0.setKey(integer0);
      assertEquals(1229, object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer(0);
      DefaultMapEntry<Integer, Object> defaultMapEntry0 = new DefaultMapEntry<Integer, Object>(integer0, integer0);
      UnmodifiableMapEntry<Object, Object> unmodifiableMapEntry0 = new UnmodifiableMapEntry<Object, Object>((Map.Entry<?, ?>) defaultMapEntry0);
      Object object0 = unmodifiableMapEntry0.getValue();
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultKeyValue<String, String> defaultKeyValue0 = new DefaultKeyValue<String, String>();
      DefaultMapEntry<String, Object> defaultMapEntry0 = new DefaultMapEntry<String, Object>(defaultKeyValue0);
      String string0 = defaultMapEntry0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultKeyValue<String, Object> defaultKeyValue0 = new DefaultKeyValue<String, Object>();
      defaultKeyValue0.setKey("");
      UnmodifiableMapEntry<String, Object> unmodifiableMapEntry0 = new UnmodifiableMapEntry<String, Object>(defaultKeyValue0);
      UnmodifiableMapEntry<Object, Object> unmodifiableMapEntry1 = new UnmodifiableMapEntry<Object, Object>((KeyValue<?, ?>) unmodifiableMapEntry0);
      Object object0 = unmodifiableMapEntry1.getKey();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer((-731));
      DefaultMapEntry<Integer, Integer> defaultMapEntry0 = new DefaultMapEntry<Integer, Integer>(integer0, integer0);
      DefaultKeyValue<Integer, Integer> defaultKeyValue0 = new DefaultKeyValue<Integer, Integer>((KeyValue<? extends Integer, ? extends Integer>) defaultMapEntry0);
      UnmodifiableMapEntry<Object, Object> unmodifiableMapEntry0 = new UnmodifiableMapEntry<Object, Object>((Object) null, (Object) null);
      // Undeclared exception!
      try { 
        unmodifiableMapEntry0.setValue(defaultKeyValue0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // setValue() is not supported
         //
         verifyException("org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultKeyValue<Object, Object> defaultKeyValue0 = new DefaultKeyValue<Object, Object>();
      Object object0 = defaultKeyValue0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DefaultKeyValue<Integer, String> defaultKeyValue0 = new DefaultKeyValue<Integer, String>();
      String string0 = defaultKeyValue0.toString();
      assertEquals("null=null", string0);
  }
}
