/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:19:45 GMT 2019
 */

package org.apache.commons.collections4.multimap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashSet;
import java.util.Map;
import org.apache.commons.collections4.MultiValuedMap;
import org.apache.commons.collections4.multimap.HashSetValuedHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HashSetValuedHashMap_ESTest extends HashSetValuedHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashSetValuedHashMap<String, Object> hashSetValuedHashMap0 = new HashSetValuedHashMap<String, Object>(1008, (-80));
      // Undeclared exception!
      try { 
        hashSetValuedHashMap0.createCollection();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -80
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashSetValuedHashMap<Integer, Integer> hashSetValuedHashMap0 = null;
      try {
        hashSetValuedHashMap0 = new HashSetValuedHashMap<Integer, Integer>((MultiValuedMap<? extends Integer, ? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.multimap.HashSetValuedHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashSetValuedHashMap<Collection<Integer>, String> hashSetValuedHashMap0 = null;
      try {
        hashSetValuedHashMap0 = new HashSetValuedHashMap<Collection<Integer>, String>((-139), (-139));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -139
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashSetValuedHashMap<Collection<Object>, Object> hashSetValuedHashMap0 = new HashSetValuedHashMap<Collection<Object>, Object>(546, 1);
      Map<Collection<Object>, Collection<Object>> map0 = hashSetValuedHashMap0.asMap();
      HashSetValuedHashMap<Object, Object> hashSetValuedHashMap1 = new HashSetValuedHashMap<Object, Object>(map0);
      assertTrue(hashSetValuedHashMap1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashSetValuedHashMap<Integer, Integer> hashSetValuedHashMap0 = null;
      try {
        hashSetValuedHashMap0 = new HashSetValuedHashMap<Integer, Integer>((Map<? extends Integer, ? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.multimap.HashSetValuedHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashSetValuedHashMap<Integer, String> hashSetValuedHashMap0 = new HashSetValuedHashMap<Integer, String>();
      HashSet<String> hashSet0 = hashSetValuedHashMap0.createCollection();
      assertEquals(0, hashSet0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashSetValuedHashMap<Object, Collection<Object>> hashSetValuedHashMap0 = new HashSetValuedHashMap<Object, Collection<Object>>((-3527));
      HashSetValuedHashMap<Object, Collection<Object>> hashSetValuedHashMap1 = new HashSetValuedHashMap<Object, Collection<Object>>(hashSetValuedHashMap0);
      assertTrue(hashSetValuedHashMap1.isEmpty());
  }
}
