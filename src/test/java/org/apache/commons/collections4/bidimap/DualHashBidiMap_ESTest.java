/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:26:06 GMT 2019
 */

package org.apache.commons.collections4.bidimap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.collections4.BidiMap;
import org.apache.commons.collections4.bidimap.DualHashBidiMap;
import org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DualHashBidiMap_ESTest extends DualHashBidiMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DualHashBidiMap<Integer, String> dualHashBidiMap0 = new DualHashBidiMap<Integer, String>();
      assertEquals(0, dualHashBidiMap0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DualHashBidiMap<HashMap<Integer, Object>, HashMap<Object, Integer>> dualHashBidiMap0 = new DualHashBidiMap<HashMap<Integer, Object>, HashMap<Object, Integer>>();
      DualLinkedHashBidiMap<HashMap<Object, Integer>, HashMap<Integer, Object>> dualLinkedHashBidiMap0 = new DualLinkedHashBidiMap<HashMap<Object, Integer>, HashMap<Integer, Object>>();
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      HashMap<Integer, Object> hashMap1 = new HashMap<Integer, Object>();
      dualLinkedHashBidiMap0.put(hashMap0, hashMap1);
      BidiMap<HashMap<Object, Integer>, HashMap<Integer, Object>> bidiMap0 = dualHashBidiMap0.createBidiMap(dualLinkedHashBidiMap0, (Map<HashMap<Integer, Object>, HashMap<Object, Integer>>) null, dualHashBidiMap0);
      assertFalse(bidiMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DualHashBidiMap<String, String> dualHashBidiMap0 = new DualHashBidiMap<String, String>();
      dualHashBidiMap0.normalMap = (Map<String, String>) dualHashBidiMap0;
      DualHashBidiMap<String, String> dualHashBidiMap1 = new DualHashBidiMap<String, String>(dualHashBidiMap0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DualHashBidiMap<Object, Integer> dualHashBidiMap0 = null;
      try {
        dualHashBidiMap0 = new DualHashBidiMap<Object, Integer>((Map<?, ? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bidimap.AbstractDualBidiMap", e);
      }
  }
}
