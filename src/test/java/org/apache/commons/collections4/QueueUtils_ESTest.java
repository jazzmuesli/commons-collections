/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:18:40 GMT 2019
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Queue;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.QueueUtils;
import org.apache.commons.collections4.Transformer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class QueueUtils_ESTest extends QueueUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        QueueUtils.unmodifiableQueue((Queue<? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        QueueUtils.transformingQueue((Queue<Object>) null, (Transformer<? super Object, ?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        QueueUtils.synchronizedQueue((Queue<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.SynchronizedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Queue<Object> queue0 = QueueUtils.emptyQueue();
      // Undeclared exception!
      try { 
        QueueUtils.predicatedQueue(queue0, (Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Predicate must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Queue<String> queue0 = QueueUtils.emptyQueue();
      Queue<Object> queue1 = QueueUtils.unmodifiableQueue((Queue<?>) queue0);
      Transformer<Object, Object> transformer0 = (Transformer<Object, Object>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      Queue<Object> queue2 = QueueUtils.transformingQueue(queue1, (Transformer<? super Object, ?>) transformer0);
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Queue<Object> queue3 = QueueUtils.predicatedQueue(queue2, (Predicate<? super Object>) predicate0);
      assertFalse(queue3.equals((Object)queue1));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Queue<String> queue0 = QueueUtils.emptyQueue();
      Queue<Object> queue1 = QueueUtils.unmodifiableQueue((Queue<?>) queue0);
      Queue<Object> queue2 = QueueUtils.synchronizedQueue(queue1);
      assertTrue(queue2.equals((Object)queue1));
  }
}
