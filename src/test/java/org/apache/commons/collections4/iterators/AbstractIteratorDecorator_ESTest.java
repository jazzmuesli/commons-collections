/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:19:21 GMT 2019
 */

package org.apache.commons.collections4.iterators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Iterator;
import org.apache.commons.collections4.iterators.SkippingIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AbstractIteratorDecorator_ESTest extends AbstractIteratorDecorator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Iterator<Object> iterator0 = (Iterator<Object>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(iterator0).next();
      SkippingIterator<Object> skippingIterator0 = new SkippingIterator<Object>(iterator0, 0L);
      Object object0 = skippingIterator0.next();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn("=?!@;X;{? 2rv^<7").when(iterator0).next();
      SkippingIterator<String> skippingIterator0 = new SkippingIterator<String>(iterator0, 0L);
      String string0 = skippingIterator0.next();
      assertEquals("=?!@;X;{? 2rv^<7", string0);
  }
}
