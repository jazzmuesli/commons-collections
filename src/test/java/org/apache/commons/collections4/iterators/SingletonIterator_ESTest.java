/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 05:54:16 GMT 2019
 */

package org.apache.commons.collections4.iterators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.collections4.iterators.SingletonIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class SingletonIterator_ESTest extends SingletonIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SingletonIterator<Object> singletonIterator0 = new SingletonIterator<Object>((Object) null);
      Object object0 = singletonIterator0.next();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      SingletonIterator<Object> singletonIterator0 = new SingletonIterator<Object>(object0);
      // Undeclared exception!
      try { 
        singletonIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.SingletonIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SingletonIterator<String> singletonIterator0 = new SingletonIterator<String>("9", true);
      singletonIterator0.next();
      singletonIterator0.remove();
      // Undeclared exception!
      try { 
        singletonIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.SingletonIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      SingletonIterator<Integer> singletonIterator0 = new SingletonIterator<Integer>(integer0, false);
      // Undeclared exception!
      try { 
        singletonIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.SingletonIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SingletonIterator<Object> singletonIterator0 = new SingletonIterator<Object>("");
      singletonIterator0.next();
      singletonIterator0.remove();
      singletonIterator0.reset();
      // Undeclared exception!
      try { 
        singletonIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.SingletonIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SingletonIterator<String> singletonIterator0 = new SingletonIterator<String>("");
      singletonIterator0.next();
      // Undeclared exception!
      try { 
        singletonIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.SingletonIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SingletonIterator<Object> singletonIterator0 = new SingletonIterator<Object>("");
      assertTrue(singletonIterator0.hasNext());
      
      singletonIterator0.next();
      singletonIterator0.remove();
      singletonIterator0.reset();
      boolean boolean0 = singletonIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer(0);
      SingletonIterator<Object> singletonIterator0 = new SingletonIterator<Object>(integer0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      singletonIterator0.forEachRemaining(consumer0);
      assertFalse(singletonIterator0.hasNext());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Integer integer0 = new Integer(0);
      SingletonIterator<Integer> singletonIterator0 = new SingletonIterator<Integer>(integer0);
      boolean boolean0 = singletonIterator0.hasNext();
      assertTrue(boolean0);
  }
}
