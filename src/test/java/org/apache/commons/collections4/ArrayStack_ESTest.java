/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 05:53:24 GMT 2019
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EmptyStackException;
import org.apache.commons.collections4.ArrayStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrayStack_ESTest extends ArrayStack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.add("org.apache.commons.collections4.ArrayStack");
      arrayStack0.push("b?a");
      int int0 = arrayStack0.search("b?a");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.push("");
      arrayStack0.push((String) null);
      arrayStack0.pop();
      assertTrue(arrayStack0.contains(""));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      // Undeclared exception!
      try { 
        arrayStack0.peek((-1423));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1422, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.add("org.apache.commons.collections4.ArrayStack");
      arrayStack0.push("b?a");
      String string0 = arrayStack0.peek();
      assertEquals("b?a", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.add((String) null);
      Object object0 = arrayStack0.peek(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.add(stringArray0[3]);
      String string0 = arrayStack0.peek();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.push("moI7k19Vd");
      boolean boolean0 = arrayStack0.empty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayStack<Object> arrayStack0 = null;
      try {
        arrayStack0 = new ArrayStack<Object>((-4608));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -4608
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.push("b?pa");
      int int0 = arrayStack0.search("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayStack<Object> arrayStack0 = new ArrayStack<Object>();
      String[] stringArray0 = new String[4];
      arrayStack0.add((Object) stringArray0[0]);
      int int0 = arrayStack0.search((Object) null);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayStack<Object> arrayStack0 = new ArrayStack<Object>();
      arrayStack0.add((Object) "b?pa");
      int int0 = arrayStack0.search((Object) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayStack<Integer> arrayStack0 = new ArrayStack<Integer>();
      try { 
        arrayStack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.ArrayStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.add("%");
      arrayStack0.pop();
      try { 
        arrayStack0.peek(0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.ArrayStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      arrayStack0.add("%");
      Object object0 = arrayStack0.peek(0);
      assertEquals("%", object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayStack<Object> arrayStack0 = new ArrayStack<Object>(0);
      assertTrue(arrayStack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayStack<String> arrayStack0 = new ArrayStack<String>();
      boolean boolean0 = arrayStack0.empty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayStack<Integer> arrayStack0 = new ArrayStack<Integer>();
      try { 
        arrayStack0.peek();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.ArrayStack", e);
      }
  }
}
