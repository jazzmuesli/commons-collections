/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:03:13 GMT 2019
 */

package org.apache.commons.collections4.comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.function.ToIntFunction;
import org.apache.commons.collections4.comparators.ReverseComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReverseComparator_ESTest extends ReverseComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ToIntFunction<Object> toIntFunction0 = (ToIntFunction<Object>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
      Comparator<Object> comparator0 = Comparator.comparingInt((ToIntFunction<? super Object>) toIntFunction0);
      ReverseComparator<Integer> reverseComparator0 = new ReverseComparator<Integer>(comparator0);
      reverseComparator0.hashCode();
      ReverseComparator<ReverseComparator<String>> reverseComparator1 = new ReverseComparator<ReverseComparator<String>>(comparator0);
      ReverseComparator<String> reverseComparator2 = new ReverseComparator<String>();
      ReverseComparator<String> reverseComparator3 = new ReverseComparator<String>(comparator0);
      Comparator<Comparable<Object>> comparator1 = Comparator.naturalOrder();
      ReverseComparator<String> reverseComparator4 = new ReverseComparator<String>(comparator0);
      ReverseComparator<Comparable<Object>> reverseComparator5 = new ReverseComparator<Comparable<Object>>(comparator1);
      reverseComparator5.hashCode();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      Integer integer0 = new Integer((-199));
      ReverseComparator<Integer> reverseComparator1 = new ReverseComparator<Integer>(reverseComparator0);
      Integer integer1 = new Integer(0);
      int int0 = reverseComparator1.compare(integer1, integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      Integer integer0 = new Integer((-199));
      ReverseComparator<Integer> reverseComparator1 = new ReverseComparator<Integer>(reverseComparator0);
      Integer integer1 = new Integer(0);
      int int0 = reverseComparator1.compare(integer0, integer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      // Undeclared exception!
      try { 
        reverseComparator0.compare((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.comparators.ComparableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      Integer integer0 = new Integer((-199));
      ReverseComparator<ReverseComparator<Object>> reverseComparator1 = new ReverseComparator<ReverseComparator<Object>>(reverseComparator0);
      // Undeclared exception!
      try { 
        reverseComparator0.compare(reverseComparator1, integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.collections4.comparators.ReverseComparator cannot be cast to java.lang.Comparable
         //
         verifyException("org.apache.commons.collections4.comparators.ComparableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      ReverseComparator<ReverseComparator<Object>> reverseComparator1 = new ReverseComparator<ReverseComparator<Object>>(reverseComparator0);
      boolean boolean0 = reverseComparator1.equals("@ #{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReverseComparator<String> reverseComparator0 = new ReverseComparator<String>((Comparator<? super String>) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ReverseComparator<String> reverseComparator0 = new ReverseComparator<String>();
      boolean boolean0 = reverseComparator0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      ReverseComparator<String> reverseComparator1 = new ReverseComparator<String>(reverseComparator0);
      ReverseComparator<ReverseComparator<Object>> reverseComparator2 = new ReverseComparator<ReverseComparator<Object>>(reverseComparator0);
      boolean boolean0 = reverseComparator2.equals(reverseComparator1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      Integer integer0 = new Integer((-199));
      int int0 = reverseComparator0.compare(integer0, integer0);
      assertEquals(0, int0);
  }
}
