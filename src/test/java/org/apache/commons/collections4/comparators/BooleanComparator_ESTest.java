/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 05:55:32 GMT 2019
 */

package org.apache.commons.collections4.comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.comparators.BooleanComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BooleanComparator_ESTest extends BooleanComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(false);
      boolean boolean0 = booleanComparator0.sortsTrueFirst();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(false);
      Boolean boolean0 = Boolean.valueOf("~bNV@Vy7FmF7Wv]<9");
      // Undeclared exception!
      try { 
        booleanComparator0.compare((Boolean) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.comparators.BooleanComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(true);
      BooleanComparator booleanComparator1 = new BooleanComparator(true);
      boolean boolean0 = booleanComparator1.equals(booleanComparator0);
      assertTrue(boolean0);
      assertTrue(booleanComparator1.sortsTrueFirst());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(true);
      Boolean boolean0 = Boolean.valueOf("BooleanComparator");
      boolean boolean1 = booleanComparator0.equals(boolean0);
      assertTrue(booleanComparator0.sortsTrueFirst());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(true);
      BooleanComparator booleanComparator1 = new BooleanComparator();
      boolean boolean0 = booleanComparator0.equals(booleanComparator1);
      assertFalse(booleanComparator1.sortsTrueFirst());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(true);
      booleanComparator0.hashCode();
      assertTrue(booleanComparator0.sortsTrueFirst());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("BooleanComparator");
      BooleanComparator booleanComparator0 = new BooleanComparator();
      Boolean boolean1 = Boolean.TRUE;
      int int0 = booleanComparator0.compare(boolean0, boolean1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(true);
      Boolean boolean0 = Boolean.valueOf("BooleanComparator");
      Boolean boolean1 = Boolean.TRUE;
      int int0 = booleanComparator0.compare(boolean0, boolean1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(true);
      Boolean boolean0 = Boolean.valueOf("BooleanComparator");
      int int0 = booleanComparator0.compare(boolean0, boolean0);
      assertEquals(0, int0);
      assertTrue(booleanComparator0.sortsTrueFirst());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BooleanComparator booleanComparator0 = BooleanComparator.booleanComparator(true);
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.FALSE;
      int int0 = booleanComparator0.compare(boolean0, boolean1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BooleanComparator booleanComparator0 = BooleanComparator.booleanComparator(false);
      assertFalse(booleanComparator0.sortsTrueFirst());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator(true);
      boolean boolean0 = booleanComparator0.sortsTrueFirst();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BooleanComparator booleanComparator0 = BooleanComparator.getFalseFirstComparator();
      Boolean boolean0 = Boolean.valueOf(true);
      int int0 = booleanComparator0.compare(boolean0, boolean0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BooleanComparator booleanComparator0 = BooleanComparator.getTrueFirstComparator();
      assertTrue(booleanComparator0.sortsTrueFirst());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BooleanComparator booleanComparator0 = new BooleanComparator();
      booleanComparator0.hashCode();
      assertFalse(booleanComparator0.sortsTrueFirst());
  }
}
