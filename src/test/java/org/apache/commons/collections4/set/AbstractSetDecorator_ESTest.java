/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:07:03 GMT 2019
 */

package org.apache.commons.collections4.set;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import org.apache.commons.collections4.set.ListOrderedSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractSetDecorator_ESTest extends AbstractSetDecorator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ListOrderedSet<Integer> listOrderedSet0 = new ListOrderedSet<Integer>(treeSet0, linkedList0);
      boolean boolean0 = listOrderedSet0.equals(treeSet0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ListOrderedSet<Integer> listOrderedSet0 = new ListOrderedSet<Integer>();
      Integer integer0 = new Integer(0);
      listOrderedSet0.add(integer0);
      listOrderedSet0.remove(0);
      Set<Integer> set0 = listOrderedSet0.decorated();
      assertFalse(set0.contains(0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-1789));
      ListOrderedSet<Integer> listOrderedSet0 = new ListOrderedSet<Integer>();
      listOrderedSet0.add(integer0);
      Set<Integer> set0 = listOrderedSet0.decorated();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<LinkedHashSet<Object>> linkedList0 = new LinkedList<LinkedHashSet<Object>>();
      ListOrderedSet<LinkedHashSet<Object>> listOrderedSet0 = ListOrderedSet.listOrderedSet((List<LinkedHashSet<Object>>) linkedList0);
      listOrderedSet0.hashCode();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ListOrderedSet<String> listOrderedSet0 = new ListOrderedSet<String>(treeSet0, linkedList0);
      boolean boolean0 = listOrderedSet0.equals("org.apache.commons.collections4.set.AbstractNavigableSetDecorator");
      assertFalse(boolean0);
  }
}
