/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:02:36 GMT 2019
 */

package org.apache.commons.collections4.set;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.functors.ExceptionTransformer;
import org.apache.commons.collections4.functors.InstanceofPredicate;
import org.apache.commons.collections4.functors.InvokerTransformer;
import org.apache.commons.collections4.functors.MapTransformer;
import org.apache.commons.collections4.functors.StringValueTransformer;
import org.apache.commons.collections4.functors.SwitchTransformer;
import org.apache.commons.collections4.set.TransformedSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransformedSet_ESTest extends TransformedSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Class<InstanceofPredicate>[] classArray0 = (Class<InstanceofPredicate>[]) Array.newInstance(Class.class, 7);
      Integer integer0 = new Integer((-653));
      linkedHashSet0.add(integer0);
      Transformer<Object, Integer> transformer0 = InvokerTransformer.invokerTransformer("2B\"", (Class<?>[]) classArray0, (Object[]) classArray0);
      // Undeclared exception!
      try { 
        TransformedSet.transformedSet((Set<Integer>) linkedHashSet0, (Transformer<? super Integer, ? extends Integer>) transformer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // InvokerTransformer: The method '2B\"' on 'class java.lang.Integer' does not exist
         //
         verifyException("org.apache.commons.collections4.functors.InvokerTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<InstanceofPredicate, Transformer<Object, Integer>> hashMap0 = new HashMap<InstanceofPredicate, Transformer<Object, Integer>>();
      Transformer<Object, Object> transformer0 = SwitchTransformer.switchTransformer((Map<? extends Predicate<? super Object>, ? extends Transformer<? super Object, ?>>) hashMap0);
      // Undeclared exception!
      try { 
        TransformedSet.transformedSet((Set<Object>) null, (Transformer<? super Object, ?>) transformer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 6);
      InvokerTransformer<InstanceofPredicate, InstanceofPredicate> invokerTransformer0 = new InvokerTransformer<InstanceofPredicate, InstanceofPredicate>("]<3q'@{lYzuBDjiUiv", classArray0, classArray0);
      TransformedSet<InstanceofPredicate> transformedSet0 = null;
      try {
        transformedSet0 = new TransformedSet<InstanceofPredicate>((Set<InstanceofPredicate>) null, invokerTransformer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      Transformer<Object, String> transformer0 = StringValueTransformer.stringValueTransformer();
      TransformedSet<Object> transformedSet0 = new TransformedSet<Object>(linkedHashSet0, transformer0);
      TransformedSet<Object> transformedSet1 = TransformedSet.transformingSet((Set<Object>) transformedSet0, (Transformer<? super Object, ?>) transformer0);
      boolean boolean0 = transformedSet1.equals(transformedSet0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Transformer<Object, Integer> transformer0 = MapTransformer.mapTransformer((Map<? super Object, ? extends Integer>) null);
      TransformedSet<Integer> transformedSet0 = new TransformedSet<Integer>(linkedHashSet0, transformer0);
      boolean boolean0 = transformedSet0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Transformer<Object, Integer> transformer0 = MapTransformer.mapTransformer((Map<? super Object, ? extends Integer>) null);
      TransformedSet<Integer> transformedSet0 = new TransformedSet<Integer>(linkedHashSet0, transformer0);
      Integer integer0 = new Integer((-253));
      transformedSet0.add(integer0);
      TransformedSet.transformedSet((Set<Integer>) linkedHashSet0, (Transformer<? super Integer, ? extends Integer>) transformer0);
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(1, linkedHashSet0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>(1855);
      Transformer<Integer, Integer> transformer0 = ExceptionTransformer.exceptionTransformer();
      Set<Integer> set0 = TransformedSet.transformedSet((Set<Integer>) linkedHashSet0, (Transformer<? super Integer, ? extends Integer>) transformer0);
      assertFalse(set0.contains(1855));
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        TransformedSet.transformingSet((Set<String>) null, (Transformer<? super String, ? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);
      InvokerTransformer<Object, Integer> invokerTransformer0 = new InvokerTransformer<Object, Integer>("&", classArray0, classArray0);
      TransformedSet<Integer> transformedSet0 = new TransformedSet<Integer>(linkedHashSet0, invokerTransformer0);
      transformedSet0.hashCode();
  }
}
