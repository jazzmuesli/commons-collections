/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:08:10 GMT 2019
 */

package org.apache.commons.collections4.set;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import java.util.function.Consumer;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.collection.PredicatedCollection;
import org.apache.commons.collections4.functors.AndPredicate;
import org.apache.commons.collections4.functors.AnyPredicate;
import org.apache.commons.collections4.functors.ChainedTransformer;
import org.apache.commons.collections4.functors.ComparatorPredicate;
import org.apache.commons.collections4.functors.ConstantTransformer;
import org.apache.commons.collections4.functors.DefaultEquator;
import org.apache.commons.collections4.functors.EqualPredicate;
import org.apache.commons.collections4.functors.ExceptionPredicate;
import org.apache.commons.collections4.functors.FalsePredicate;
import org.apache.commons.collections4.functors.IdentityPredicate;
import org.apache.commons.collections4.functors.InvokerTransformer;
import org.apache.commons.collections4.functors.NotPredicate;
import org.apache.commons.collections4.functors.NullIsExceptionPredicate;
import org.apache.commons.collections4.functors.NullIsFalsePredicate;
import org.apache.commons.collections4.functors.NullIsTruePredicate;
import org.apache.commons.collections4.functors.NullPredicate;
import org.apache.commons.collections4.functors.OnePredicate;
import org.apache.commons.collections4.functors.SwitchTransformer;
import org.apache.commons.collections4.functors.TransformerPredicate;
import org.apache.commons.collections4.functors.TruePredicate;
import org.apache.commons.collections4.functors.UniquePredicate;
import org.apache.commons.collections4.set.PredicatedSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PredicatedSet_ESTest extends PredicatedSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedHashSet<Transformer<Object, Object>> linkedHashSet0 = new LinkedHashSet<Transformer<Object, Object>>();
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      OnePredicate<Object> onePredicate0 = new OnePredicate<Object>(predicateArray0);
      AndPredicate<Object> andPredicate0 = new AndPredicate<Object>(onePredicate0, onePredicate0);
      Transformer<Object, Object> transformer0 = ChainedTransformer.chainedTransformer((Collection<? extends Transformer<? super Object, ?>>) linkedHashSet0);
      linkedHashSet0.add(transformer0);
      NullIsTruePredicate<Object> nullIsTruePredicate0 = new NullIsTruePredicate<Object>(andPredicate0);
      predicateArray0[0] = (Predicate<Object>) nullIsTruePredicate0;
      AnyPredicate<Object> anyPredicate0 = new AnyPredicate<Object>(predicateArray0);
      linkedHashSet0.add(transformer0);
      onePredicate0.getPredicates();
      PredicatedSet<Transformer<Object, Object>> predicatedSet0 = null;
      try {
        predicatedSet0 = new PredicatedSet<Transformer<Object, Object>>(linkedHashSet0, anyPredicate0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      linkedHashSet0.add((Object) null);
      TransformerPredicate<Object> transformerPredicate0 = new TransformerPredicate<Object>((Transformer<? super Object, Boolean>) null);
      // Undeclared exception!
      try { 
        PredicatedSet.predicatedSet((Set<Object>) linkedHashSet0, (Predicate<? super Object>) transformerPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.functors.TransformerPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 2);
      Class<Object> class0 = Object.class;
      classArray0[0] = class0;
      Class<Object> class1 = Object.class;
      classArray0[1] = class1;
      InvokerTransformer<Object, Boolean> invokerTransformer0 = new InvokerTransformer<Object, Boolean>("", classArray0, classArray0);
      TransformerPredicate<Object> transformerPredicate0 = new TransformerPredicate<Object>(invokerTransformer0);
      PredicatedSet<Integer> predicatedSet0 = PredicatedSet.predicatedSet((Set<Integer>) linkedHashSet0, (Predicate<? super Integer>) transformerPredicate0);
      PredicatedSet<Integer> predicatedSet1 = new PredicatedSet<Integer>(predicatedSet0, transformerPredicate0);
      LinkedHashSet<LinkedHashSet<String>> linkedHashSet1 = new LinkedHashSet<LinkedHashSet<String>>();
      PredicatedSet<LinkedHashSet<String>> predicatedSet2 = PredicatedSet.predicatedSet((Set<LinkedHashSet<String>>) linkedHashSet1, (Predicate<? super LinkedHashSet<String>>) transformerPredicate0);
      LinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>();
      linkedHashSet1.add(linkedHashSet2);
      PredicatedSet<LinkedHashSet<String>> predicatedSet3 = null;
      try {
        predicatedSet3 = new PredicatedSet<LinkedHashSet<String>>(predicatedSet2, transformerPredicate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // InvokerTransformer: The method '' on 'class java.util.LinkedHashSet' does not exist
         //
         verifyException("org.apache.commons.collections4.functors.InvokerTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      Predicate<Object> predicate0 = null;
      Integer integer0 = new Integer(4);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER;
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>(integer0, comparator0, comparatorPredicate_Criterion0);
      linkedHashSet0.add(comparatorPredicate0);
      NullIsFalsePredicate<Object> nullIsFalsePredicate0 = new NullIsFalsePredicate<Object>((Predicate<? super Object>) null);
      PredicatedSet<Object> predicatedSet0 = null;
      try {
        predicatedSet0 = new PredicatedSet<Object>(linkedHashSet0, nullIsFalsePredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.functors.NullIsFalsePredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      Predicate<Object> predicate0 = FalsePredicate.falsePredicate();
      linkedHashSet0.add(predicate0);
      PredicatedSet<Object> predicatedSet0 = null;
      try {
        predicatedSet0 = new PredicatedSet<Object>(linkedHashSet0, predicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add Object 'org.apache.commons.collections4.functors.FalsePredicate@1' - Predicate 'org.apache.commons.collections4.functors.FalsePredicate@1' rejected it
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      Predicate<Object> predicate0 = ComparatorPredicate.comparatorPredicate((Object) linkedHashSet0, comparator0);
      predicateArray0[0] = predicate0;
      String string0 = "x]MJMY,&)q";
      linkedHashSet0.add("x]MJMY,&)q");
      AnyPredicate<Object> anyPredicate0 = new AnyPredicate<Object>(predicateArray0);
      Predicate<Object> predicate1 = NotPredicate.notPredicate((Predicate<? super Object>) anyPredicate0);
      // Undeclared exception!
      try { 
        PredicatedSet.predicatedSet((Set<String>) linkedHashSet0, (Predicate<? super String>) predicate1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add Object 'x]MJMY,&)q' - Predicate 'org.apache.commons.collections4.functors.NotPredicate@3' rejected it
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Predicate<Object> predicate0 = NullPredicate.nullPredicate();
      PredicatedSet<String> predicatedSet0 = PredicatedSet.predicatedSet((Set<String>) linkedHashSet0, (Predicate<? super String>) predicate0);
      predicatedSet0.clear();
      linkedHashSet0.add("eX`f_U");
      predicatedSet0.removeAll(linkedHashSet0);
      predicatedSet0.equals((Object) null);
      PredicatedSet.predicatedSet((Set<LinkedHashSet<LinkedHashSet>>) predicatedSet0, (Predicate<? super LinkedHashSet<LinkedHashSet>>) predicate0);
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      PredicatedSet<Object> predicatedSet1 = new PredicatedSet<Object>(linkedHashSet1, predicate0);
      predicatedSet1.hashCode();
      PredicatedSet<LinkedHashSet<Object>> predicatedSet2 = null;
      try {
        predicatedSet2 = new PredicatedSet<LinkedHashSet<Object>>((Set<LinkedHashSet<Object>>) null, predicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedHashSet<LinkedHashSet<String>> linkedHashSet0 = new LinkedHashSet<LinkedHashSet<String>>();
      HashMap<Predicate<Object>, Transformer<Object, Boolean>> hashMap0 = new HashMap<Predicate<Object>, Transformer<Object, Boolean>>();
      Predicate<Object> predicate0 = NullPredicate.nullPredicate();
      Transformer<Object, Boolean> transformer0 = ConstantTransformer.nullTransformer();
      hashMap0.put(predicate0, transformer0);
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      linkedHashSet0.add(linkedHashSet1);
      Transformer<Object, Boolean> transformer1 = SwitchTransformer.switchTransformer((Map<? extends Predicate<? super Object>, ? extends Transformer<? super Object, ? extends Boolean>>) hashMap0);
      Predicate<Object> predicate1 = TransformerPredicate.transformerPredicate((Transformer<? super Object, Boolean>) transformer1);
      // Undeclared exception!
      try { 
        PredicatedSet.predicatedSet((Set<LinkedHashSet<String>>) linkedHashSet0, (Predicate<? super LinkedHashSet<String>>) predicate1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Transformer must return an instanceof Boolean, it was a null object
         //
         verifyException("org.apache.commons.collections4.functors.TransformerPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedHashSet<Predicate<Object>> linkedHashSet0 = new LinkedHashSet<Predicate<Object>>();
      Predicate<Object> predicate0 = TruePredicate.truePredicate();
      Predicate<Object> predicate1 = NullIsExceptionPredicate.nullIsExceptionPredicate((Predicate<? super Object>) predicate0);
      PredicatedSet<Predicate<Object>> predicatedSet0 = PredicatedSet.predicatedSet((Set<Predicate<Object>>) linkedHashSet0, (Predicate<? super Predicate<Object>>) predicate1);
      PredicatedSet<Predicate<Object>> predicatedSet1 = new PredicatedSet<Predicate<Object>>(predicatedSet0, predicate0);
      LinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>();
      PredicatedSet<Integer> predicatedSet2 = new PredicatedSet<Integer>(linkedHashSet1, predicate0);
      predicatedSet2.decorated();
      Integer integer0 = new Integer((-1520));
      linkedHashSet1.add(integer0);
      LinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>();
      PredicatedSet<String> predicatedSet3 = PredicatedSet.predicatedSet((Set<String>) linkedHashSet2, (Predicate<? super String>) predicate1);
      predicatedSet3.decorated();
      predicatedSet2.decorated();
      predicatedSet3.decorated();
      PredicatedSet.predicatedSet((Set<Integer>) linkedHashSet1, (Predicate<? super Integer>) predicate1);
      LinkedHashSet<Object> linkedHashSet3 = new LinkedHashSet<Object>();
      PredicatedSet<Object> predicatedSet4 = new PredicatedSet<Object>(linkedHashSet3, predicate0);
      predicatedSet4.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Predicate<Object> predicate0 = FalsePredicate.falsePredicate();
      PredicatedSet<Integer> predicatedSet0 = new PredicatedSet<Integer>(linkedHashSet0, predicate0);
      Object object0 = new Object();
      boolean boolean0 = predicatedSet0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Predicate<Object> predicate0 = null;
      // Undeclared exception!
      try { 
        PredicatedSet.predicatedSet((Set<Integer>) linkedHashSet0, (Predicate<? super Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Predicate must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      Predicate<Object> predicate0 = IdentityPredicate.identityPredicate((Object) linkedHashSet0);
      PredicatedSet<Object> predicatedSet0 = PredicatedSet.predicatedSet((Set<Object>) linkedHashSet0, (Predicate<? super Object>) predicate0);
      boolean boolean0 = predicatedSet0.equals(linkedHashSet0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedHashSet<Transformer<Object, Boolean>> linkedHashSet0 = new LinkedHashSet<Transformer<Object, Boolean>>();
      Predicate<Object> predicate0 = ExceptionPredicate.exceptionPredicate();
      PredicatedSet<Transformer<Object, Boolean>> predicatedSet0 = new PredicatedSet<Transformer<Object, Boolean>>(linkedHashSet0, predicate0);
      PredicatedSet<Transformer<Object, Boolean>> predicatedSet1 = new PredicatedSet<Transformer<Object, Boolean>>(predicatedSet0, predicate0);
      assertTrue(predicatedSet1.equals((Object)predicatedSet0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedHashSet<Predicate<Boolean>> linkedHashSet0 = new LinkedHashSet<Predicate<Boolean>>();
      IdentityPredicate<Object> identityPredicate0 = new IdentityPredicate<Object>(linkedHashSet0);
      PredicatedSet<Predicate<Boolean>> predicatedSet0 = new PredicatedSet<Predicate<Boolean>>(linkedHashSet0, identityPredicate0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedHashSet<Boolean> linkedHashSet0 = new LinkedHashSet<Boolean>();
      // Undeclared exception!
      try { 
        PredicatedSet.predicatedSet((Set<Boolean>) linkedHashSet0, (Predicate<? super Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Predicate must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      IdentityPredicate<Object> identityPredicate0 = new IdentityPredicate<Object>(linkedHashSet0);
      PredicatedSet<Integer> predicatedSet0 = PredicatedSet.predicatedSet((Set<Integer>) linkedHashSet0, (Predicate<? super Integer>) identityPredicate0);
      predicatedSet0.equals(".fL$%,xB\".by#H{");
      LinkedHashSet<Boolean> linkedHashSet1 = new LinkedHashSet<Boolean>();
      PredicatedSet<Boolean> predicatedSet1 = new PredicatedSet<Boolean>(linkedHashSet1, identityPredicate0);
      predicatedSet1.equals(predicatedSet0);
      predicatedSet0.hashCode();
  }
}
