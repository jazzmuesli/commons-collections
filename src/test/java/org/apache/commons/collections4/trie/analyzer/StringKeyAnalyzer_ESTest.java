/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 05:45:28 GMT 2019
 */

package org.apache.commons.collections4.trie.analyzer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringKeyAnalyzer_ESTest extends StringKeyAnalyzer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = new StringKeyAnalyzer();
      // Undeclared exception!
      try { 
        stringKeyAnalyzer0.isPrefix("YdW*=<O`C", 16, (-2930), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot determine prefix outside of Character boundaries
         //
         verifyException("org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = new StringKeyAnalyzer();
      // Undeclared exception!
      try { 
        stringKeyAnalyzer0.isPrefix("k92#BeE;fJl/j/buknn", (-1), 16, "k92#BeE;fJl/j/buknn");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot determine prefix outside of Character boundaries
         //
         verifyException("org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = new StringKeyAnalyzer();
      stringKeyAnalyzer0.isBitSet("org.apache.commons.collections4.trie.KeyAnalyzer", 513, 2230);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = new StringKeyAnalyzer();
      stringKeyAnalyzer0.isBitSet("The offsets and lengths must be at Character boundaries", 0, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      // Undeclared exception!
      try { 
        stringKeyAnalyzer0.INSTANCE.bitIndex("", 16, 16, "", 0, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      stringKeyAnalyzer0.bitIndex("2oaNu-KU", 96, 96, "org.apache.commons.collections4.trie.KeyAnalyzer", 96, 96);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      int int0 = stringKeyAnalyzer0.bitIndex("org.apache.commons.collections4.trie.KeyAnalyzer", 768, 0, "[r0tW?)1BP{77p*m", 768, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = new StringKeyAnalyzer();
      int int0 = stringKeyAnalyzer0.bitIndex("j/K-a Fh90?`zu.Qa", (-928), (-928), "j/K-a Fh90?`zu.Qa", (-928), (-928));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      // Undeclared exception!
      try { 
        stringKeyAnalyzer0.bitIndex("", 16, 16, "", 16, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The offsets and lengths must be at Character boundaries
         //
         verifyException("org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      // Undeclared exception!
      try { 
        stringKeyAnalyzer0.bitIndex("org.apache.commons.collections4.trie.KeyAnalyzer", 0, 1384, "iJjy3\"$", 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The offsets and lengths must be at Character boundaries
         //
         verifyException("org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      // Undeclared exception!
      try { 
        stringKeyAnalyzer0.bitIndex("S+Y[Okh`-/", 16, 1, "org.apache.commons.collections4.trie.KeyAnalyzer", 1, 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The offsets and lengths must be at Character boundaries
         //
         verifyException("org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      // Undeclared exception!
      try { 
        stringKeyAnalyzer0.bitIndex("org.apache.commons.collections4.trie.KeyAnalyzer", 2463, 0, "=\"'wd)c\" *Q=", (-1), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The offsets and lengths must be at Character boundaries
         //
         verifyException("org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      int int0 = stringKeyAnalyzer0.lengthInBits("org.apache.commons.collections4.trie.KeyAnalyzer");
      assertEquals(768, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = StringKeyAnalyzer.INSTANCE;
      boolean boolean0 = stringKeyAnalyzer0.isPrefix("org.apache.commons.collections4.trie.KeyAnalyzer", 0, 16, "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringKeyAnalyzer stringKeyAnalyzer0 = new StringKeyAnalyzer();
      // Undeclared exception!
      try { 
        stringKeyAnalyzer0.isPrefix(">@i\"MOJzNJ`R0K", 16, 0, "o{j.>}kma-?>A<[fe");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
