/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:10:45 GMT 2019
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.functors.TransformedPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class TransformedPredicate_ESTest extends TransformedPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Transformer<Object, Integer> transformer0 = (Transformer<Object, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate1 = TransformedPredicate.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) predicate0);
      TransformedPredicate<Object> transformedPredicate0 = new TransformedPredicate<Object>(transformer0, predicate1);
      TransformedPredicate<Integer> transformedPredicate1 = new TransformedPredicate<Integer>((Transformer<? super Integer, ? extends Integer>) null, transformedPredicate0);
      Transformer<? super Integer, ? extends Integer> transformer1 = transformedPredicate1.getTransformer();
      assertNull(transformer1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Transformer<Object, String> transformer0 = (Transformer<Object, String>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      doReturn("$=n*YMFvTOUIg", "$=n*YMFvTOUIg").when(transformer0).transform(any());
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(predicate0).evaluate(any());
      Predicate<Object> predicate1 = TransformedPredicate.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) predicate0);
      TransformedPredicate<String> transformedPredicate0 = new TransformedPredicate<String>(transformer0, predicate1);
      boolean boolean0 = transformedPredicate0.evaluate("o");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Transformer<Object, Object> transformer0 = (Transformer<Object, Object>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate1 = TransformedPredicate.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) predicate0);
      TransformedPredicate<String> transformedPredicate0 = new TransformedPredicate<String>((Transformer<? super String, ? extends String>) null, predicate1);
      // Undeclared exception!
      try { 
        transformedPredicate0.evaluate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.functors.TransformedPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Transformer<Object, Integer> transformer0 = (Transformer<Object, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        TransformedPredicate.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The predicate to call must not be null
         //
         verifyException("org.apache.commons.collections4.functors.TransformedPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Transformer<Object, Object> transformer0 = (Transformer<Object, Object>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate1 = TransformedPredicate.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) predicate0);
      // Undeclared exception!
      try { 
        TransformedPredicate.transformedPredicate((Transformer<? super Integer, ? extends Integer>) null, (Predicate<? super Integer>) predicate1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The transformer to call must not be null
         //
         verifyException("org.apache.commons.collections4.functors.TransformedPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Transformer<Object, Object> transformer0 = (Transformer<Object, Object>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate1 = TransformedPredicate.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) predicate0);
      TransformedPredicate<Object> transformedPredicate0 = new TransformedPredicate<Object>(transformer0, predicate1);
      Predicate<? super Object>[] predicateArray0 = transformedPredicate0.getPredicates();
      assertEquals(1, predicateArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Transformer<Object, Object> transformer0 = (Transformer<Object, Object>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(transformer0).transform(any());
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate0).evaluate(any());
      Predicate<Object> predicate1 = TransformedPredicate.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) predicate0);
      Transformer<Integer, Integer> transformer1 = (Transformer<Integer, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(transformer1).transform(anyInt());
      TransformedPredicate<Integer> transformedPredicate0 = new TransformedPredicate<Integer>(transformer1, predicate1);
      Integer integer0 = new Integer(3043);
      boolean boolean0 = transformedPredicate0.evaluate(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Transformer<Object, Object> transformer0 = (Transformer<Object, Object>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Object> predicate1 = TransformedPredicate.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) predicate0);
      Transformer<Integer, Integer> transformer1 = (Transformer<Integer, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(transformer1).toString();
      TransformedPredicate<Integer> transformedPredicate0 = new TransformedPredicate<Integer>(transformer1, predicate1);
      Transformer<? super Integer, ? extends Integer> transformer2 = transformedPredicate0.getTransformer();
      assertNotNull(transformer2);
  }
}
