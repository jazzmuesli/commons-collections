/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:25:25 GMT 2019
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.AnyPredicate;
import org.apache.commons.collections4.functors.NonePredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AbstractQuantifierPredicate_ESTest extends AbstractQuantifierPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      AnyPredicate<Predicate<String>> anyPredicate0 = new AnyPredicate<Predicate<String>>(predicateArray0);
      Predicate<? super Predicate<String>>[] predicateArray1 = anyPredicate0.getPredicates();
      assertEquals(1, predicateArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 0);
      NonePredicate<String> nonePredicate0 = new NonePredicate<String>(predicateArray0);
      Predicate<? super String>[] predicateArray1 = nonePredicate0.getPredicates();
      assertEquals(0, predicateArray1.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NonePredicate<String> nonePredicate0 = new NonePredicate<String>((Predicate<? super String>[]) null);
      Predicate<? super String>[] predicateArray0 = nonePredicate0.getPredicates();
      assertNull(predicateArray0);
  }
}
