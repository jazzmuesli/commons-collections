/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:09:56 GMT 2019
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.NotPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NotPredicate_ESTest extends NotPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NotPredicate<Object> notPredicate0 = new NotPredicate<Object>((Predicate<? super Object>) null);
      // Undeclared exception!
      try { 
        notPredicate0.evaluate((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.functors.NotPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate0).evaluate(any());
      Predicate<String> predicate1 = NotPredicate.notPredicate((Predicate<? super String>) predicate0);
      NotPredicate<String> notPredicate0 = new NotPredicate<String>(predicate1);
      boolean boolean0 = notPredicate0.evaluate("Hf-jxY");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(predicate0).evaluate(any());
      Predicate<String> predicate1 = NotPredicate.notPredicate((Predicate<? super String>) predicate0);
      NotPredicate<String> notPredicate0 = new NotPredicate<String>(predicate1);
      boolean boolean0 = notPredicate0.evaluate("Transformer must return an instanceof Boolean, it was a null object");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        NotPredicate.notPredicate((Predicate<? super String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Predicate must not be null
         //
         verifyException("org.apache.commons.collections4.functors.NotPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<String> predicate1 = NotPredicate.notPredicate((Predicate<? super String>) predicate0);
      NotPredicate<String> notPredicate0 = new NotPredicate<String>(predicate1);
      Predicate<? super String>[] predicateArray0 = notPredicate0.getPredicates();
      assertEquals(1, predicateArray0.length);
  }
}
