/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 16 06:04:49 GMT 2019
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.Equator;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.DefaultEquator;
import org.apache.commons.collections4.functors.EqualPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EqualPredicate_ESTest extends EqualPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EqualPredicate<String> equalPredicate0 = new EqualPredicate<String>("xKD>M-q{");
      Object object0 = equalPredicate0.getValue();
      assertEquals("xKD>M-q{", object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultEquator<Object> defaultEquator0 = DefaultEquator.defaultEquator();
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>((Object) null, defaultEquator0);
      boolean boolean0 = equalPredicate0.evaluate(defaultEquator0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>((Object) null);
      // Undeclared exception!
      try { 
        equalPredicate0.evaluate("xKD>M-q{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.functors.EqualPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultEquator<Object> defaultEquator0 = DefaultEquator.defaultEquator();
      Predicate<Object> predicate0 = EqualPredicate.equalPredicate((Object) null, (Equator<Object>) defaultEquator0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>((Object) null);
      DefaultEquator<Object> defaultEquator0 = DefaultEquator.defaultEquator();
      Predicate<Object> predicate0 = EqualPredicate.equalPredicate((Object) equalPredicate0, (Equator<Object>) defaultEquator0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Predicate<Object> predicate0 = EqualPredicate.equalPredicate((Object) null);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Predicate<String> predicate0 = EqualPredicate.equalPredicate("xKD>M-q{");
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EqualPredicate<String> equalPredicate0 = new EqualPredicate<String>((String) null, (Equator<String>) null);
      Object object0 = equalPredicate0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EqualPredicate<String> equalPredicate0 = new EqualPredicate<String>(")gLSyawE3%%1l");
      boolean boolean0 = equalPredicate0.evaluate(")gLSyawE3%%1l");
      assertTrue(boolean0);
  }
}
